# See docs/devel/tracing.txt for syntax documentation.

# hw/virtio/virtio.c
virtqueue_alloc_element(void *elem, size_t sz, unsigned in_num, unsigned out_num) "elem %p size %zd in_num %u out_num %u"
virtqueue_fill(void *vq, const void *elem, unsigned int len, unsigned int idx) "vq %p elem %p len %u idx %u"
virtqueue_flush(void *vq, unsigned int count) "vq %p count %u"
virtqueue_pop(void *vq, void *elem, unsigned int in_num, unsigned int out_num) "vq %p elem %p in_num %u out_num %u"
virtio_queue_notify(void *vdev, int n, void *vq) "vdev %p n %d vq %p"
virtio_notify_irqfd(void *vdev, void *vq) "vdev %p vq %p"
virtio_notify(void *vdev, void *vq) "vdev %p vq %p"
virtio_set_status(void *vdev, uint8_t val) "vdev %p val %u"

# hw/virtio/virtio-rng.c
virtio_rng_guest_not_ready(void *rng) "rng %p: guest not ready"
virtio_rng_cpu_is_stopped(void *rng, int size) "rng %p: cpu is stopped, dropping %d bytes"
virtio_rng_popped(void *rng) "rng %p: elem popped"
virtio_rng_pushed(void *rng, size_t len) "rng %p: %zd bytes pushed"
virtio_rng_request(void *rng, size_t size, unsigned quota) "rng %p: %zd bytes requested, %u bytes quota left"
virtio_rng_vm_state_change(void *rng, int running, int state) "rng %p: state change to running %d state %d"

# hw/virtio/virtio-balloon.c
#
virtio_balloon_bad_addr(uint64_t gpa) "0x%"PRIx64
virtio_balloon_handle_output(const char *name, uint64_t gpa) "section name: %s gpa: 0x%"PRIx64
virtio_balloon_get_config(uint32_t num_pages, uint32_t actual) "num_pages: %d actual: %d"
virtio_balloon_set_config(uint32_t actual, uint32_t oldactual) "actual: %d oldactual: %d"
virtio_balloon_to_target(uint64_t target, uint32_t num_pages) "balloon target: 0x%"PRIx64" num_pages: %d"

# hw/virtio/virtio-vhost-user.c
virtio_vhost_user_m2s_bad_version(void *s, unsigned int version) "s %p version %u"
virtio_vhost_user_m2s_unexpected_reply(void *s) "s %p"
virtio_vhost_user_m2s_bad_payload_size(void *s, unsigned int size) "s %p size %u"
virtio_vhost_user_m2s_bad_request(void *s, unsigned request) "s %p request %u"
virtio_vhost_user_m2s_request(void *s, unsigned int request) "s %p request %u"
virtio_vhost_user_m2s_unknown_request(void *s, unsigned int request) "s %p request %u"
virtio_vhost_user_s2m_bad_version(void *s, unsigned int version) "s %p version %u"
virtio_vhost_user_s2m_expected_reply(void *s) "s %p"
virtio_vhost_user_s2m_bad_payload_size(void *s, unsigned int size) "s %p size %u"
virtio_vhost_user_s2m_bad_request(void *s, unsigned request) "s %p request %u"
virtio_vhost_user_s2m_request(void *s, unsigned int request) "s %p request %u"
virtio_vhost_user_s2m_unknown_request(void *s, unsigned int request) "s %p request %u"
virtio_vhost_user_rxq_empty(void *s) "s %p"
virtio_vhost_user_tx_done(void *s) "s %p"
virtio_vhost_user_chr_event(void *s, int event) "s %p event %d"
virtio_vhost_user_chr_change(void *s) "s %p"
virtio_vhost_user_conn_state_transition(void *s, int old_state, int event, int new_state) "s %p old_state %d event %d new_state %d"
virtio_vhost_user_set_config(void *s, unsigned int old_status, unsigned int new_status) "s %p old_status %u new_status %u"
virtio_vhost_user_doorbell_write(void *s, unsigned int vq_idx, ssize_t nwritten) "s %p vq_idx %u nwritten %zd"
virtio_vhost_user_memory_region(void *s, uint64_t guest_phys_addr, uint64_t memory_size, uint64_t userspace_addr, uint64_t mmap_offset, void *mmap_addr) "s %p guest_phys_addr 0x%"PRIx64" memory_size 0x%"PRIx64" userspace_addr 0x%"PRIx64" mmap_offset 0x%"PRIx64" mmap_addr %p"
